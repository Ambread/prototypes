module boolean;

enum Boolean(True, False) {

    func is_false(self: Self) -> Self {
        match(self) {
            True -> False,
            False -> True,
        }
    };

    func then<R>(self: Self, body: block() -> R) -> Optional<R> {
        match(self) {
            True -> Some(body()),
            False -> Nothing,
        }
    };

    func while(self: block() -> Self, body: block() -> Unit) -> Unit {
        loop {
            match(self()) {
                True -> body(),
                False -> return,
            };
        };
    };
};

func take_if<T>(self: T, condition: block(it: T) -> Boolean) -> Optional<T> {
    condition.then { self }
};
